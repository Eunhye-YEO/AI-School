html,body, h1 {
	margin: 0;
	padding: 0;
}



/*.pc {
	color: red;
	font-size: 50px;
	background-color: pink;
}

.mobile {
	display: none;
}
@media (min-width: 320px) and (max-width: 767px) {
	.pc {
		display: none;

		color: blue;
		font-size: 20px;
		background-color: yellow;
	}
	.mobile {
		display: block;

	}
}
*/

/*display를 이용하여 
mobile과 pc 버전에서 따로 쓰는 글 을 나타낼수있다.*/

/*@media (min-width: 320px) and (max-width: 767px) {
	.pc {
		color: blue;
		font-size: 20px;
		background-color: yellow;
	}

}*/
/*@media (min-width: 100px) and (max-width: 599px) {
	.pc {
		color: green;
		font-size: 100px;
		background-color: gray;
	}
}*/
/*min 이하의 사이즈가되면 그전에 설정값으로 돌아간다.
 또 검사에서 미디어 쿼리 코드를 확인하고 싶을때는 그사이즈가 되었을때만 css에 코드가 보인다.
*/
/*
미디어쿼리 : width 값의 크기를 기준으로 어떤 분기점을 설정 할때 사용되는 것
최소 위드값과 최대 위드 값을 설정하느것으로 각각 pc와 모바일 버전을 설정할 수 있다.

*사용자가어떤것으로 접속했는지 알수있는 가장 직관적인 방법
-사용자가 접속한 width 값으로  파악
-320px ~ 768px 미만  : 스마트폰
-768px ~ 1024px 미만 :태블릿
-1024px 이상         : PC

사용시 주의점
1.미디어쿼리 안쪽은 바깥쪽의 상속을 받는다 
  - pc버전의 css 코드를 매번 확인해 가면서 변경을 해야한다.
2.미디어쿼리 사용시 반드시 메타 태그를 넣어줘야한다.
-<meta name="viewport(웹사이트 접속시 사용되는 기기화면" 
             content="width=device-width(접속된 화면은 디바이스의 width값으로 적용겠다,
                      initial-scale=1.0(비율은 1.0을 유지 하겠다)" >
 !참고
 viewport - https://www.w3schools.com/css/css_rwd_viewport.asp
 기기별 크기 -
  https://css-tricks.com/snippets/css/media-queries-for-standard-devices/  

3. 크롬 내가만든 웹브라우저 검사에서 toggle device toolbar 를 이용해 여러 기기버전 확인 가능

*/



/*일반적으로 mobile - tablet - pc 버전 순으로 제작이 되는 경우가 많다. */

/*h1 {
	font-size: 20px;
	background-color: yellow;

}*/

/*미디어 쿼리를 이렇게 연속적으로 사용할 경우
자연스레 max-width는 1024px 미만이 된다.*/

/*@media (min-width:  768px) {
	h1 {
		font-size: 40px;
		background-color: pink;
	}
}
@media (min-width:  1024px) {
	h1 {
		font-size: 80px;
		background-color: gray;
	}
}

*/


/*li 태그 x축 변
참고 사이트! https://flexbox.help/

pc버전에서는 x축 모바일버전에서는 y축으로 정렬하는 미디어쿼리 기능 */

/*.media-menu {
	list-style: none;
	margin: 0;
	padding: 0;

	display: flex;
	justify-content: space-between;
	align-items: center;

	width: 700px;
	background-color: black;
}


.media-menu a {
	color: black;
	text-decoration: none;
}
.media-menu li {
	width: 150px;
	background-color: yellow;
	border: solid 5px darkred;
	padding: 5px 15px;
	text-align: center;

}

@media (min-width:  320px) and (max-width:  767px) {
	.media-menu {
		flex-direction: column;
		align-items: flex-start;
		width: 190px;
	}
	.media-menu li {
		margin-bottom: 10px;
	}
	.media-menu li:last-child {
		margin-bottom: 0;
	}
}

*/



/*pc버전*/
/*.intro {
	display: flex;
	position: fixed;

	width: 100%;
	height: 80px;
	background-color: #ffffff;
}

.intro h1 {
	width: 50%;
	height: 80px;
	background-color: black;
}

.intro nav {
	width: 50%;
	height: 80px;
	background-color: yellow;
}

.intro nav ul {
	list-style: none;
	padding: 0;
	margin: 0;
}

.intro nav ul {
	display: flex;

}*/

/*.intro nav ul li {
	width: 33.333%;*/
	/*3등분을 할때 오차를 작게*/
	/*height: 80px;
}*/

/*.intro nav ul li:nth-child(1){
	background-color: blue;
	
}
.intro nav ul li:nth-child(2){
	background-color: gray;
	
}
.intro nav ul li:nth-child(3){
	background-color: green;
	
}

main {
	width: 100%;
	height: 2000px;
	background-color: gold;

	padding-top: 80px;
}*/

/*2차원인 메인과 3차원인헤더 태그가 겹치는 부분이 있어 
메인의 글이 헤더 뒤로 들어가는경우
패딩 탑 값을 주면서 겹치는 부분에는 공간이 발생하도록 하면 글을 내려줄수있다.*/

/*모바일*/
/*@media (min-width: 320px) and (max-width: 767px) {
	.intro{
		position: static;
		flex-direction: column;
		height: 160px;

	}
	.intro h1{
		width: 100%;
	}
	.intro nav{
		width: 100%;
	}
	main {
		padding-top: 0;
	}
}
*/

/*.container {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;

	width: 1140px;
	margin: 0 auto;
	background-color: pink;
}
.column {
	width: 355px;
	background-color: white;
	border: solid 2px red;
	margin-bottom: 10px;
}
.column:nth-child(4),
.column:nth-child(5),
.column:nth-child(6) {
	margin-bottom: 0;
}
.column img {
	width: 100%;
	vertical-align: middle;
}

.image-info {
	padding: 20px 0;
	text-align: center;
}
.image-info h2{
	margin: 0;
}

@media (min-width: 540px) and (max-width: 720px) {
	.container {
		width: 720px;
	}
	.column:nth-child(4) {
		margin-bottom: 10px;
  }
}
@media (min-width:  320px) and (max-width: 539px) {
	.container{
		box-sizing: border-box;
		width: 100%;

		padding: 0 20px;
	}
	.column {
		width: 100%;
	}
	.column:nth-child(4),
	.column:nth-child(5) {
		margin-bottom: 10px;
	}

}*/



















